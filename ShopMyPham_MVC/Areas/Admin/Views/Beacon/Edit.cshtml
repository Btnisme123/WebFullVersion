@model ShopMyPham_MVC.Framework.Beacon
@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}


@section header

{
    <h4 class="title1">Cập nhật Beacon</h4>
}
@section jsFooter
{
    <script>
        
        var editor = CKEDITOR.replace('txtcontent', {
            customConfig: '/Asset/Admin/js/ckeditor/config.js'
        });
    </script>
}
<div class="forms">
    <div class="form-grids row widget-shadow" data-example-id="basic-forms" style="margin-top: -10px;">
        <div class="form-title">
            <h4>Beacon:</h4>
        </div>
        <div class="form-body">
            @using (Html.BeginForm("Edit", "Beacon", FormMethod.Post))
            {

                <style>
                    #mapCanvas {
                        height: 600px;
                    }
                </style>
                @Html.AntiForgeryToken()
                <form>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(model => model.MACID, htmlAttributes: new { @class = "col-sm-2 control-label" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.MACID, new { @class = "form-control1", @autofocus = "autofocus", @placeholder = "Title" })

                            </div>
                            <div class="col-md-2">
                                @Html.ValidationMessageFor(model => model.MACID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(model => model.LocationX, htmlAttributes: new { @class = "col-sm-2 control-label" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.LocationX, new { @class = "form-control1", @autofocus = "autofocus", @placeholder = "Title Short" ,@id= "txtCordinateX" })
                            </div>
                            <div class="col-md-2">
                                @Html.ValidationMessageFor(model => model.LocationX, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(model => model.LocationY, htmlAttributes: new { @class = "col-sm-2 control-label" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.LocationY, new { @class = "form-control1", @autofocus = "autofocus", @placeholder = "Image", @id = "txtCordinateY" })
                              
                            </div>
                            <div class="col-md-2">
                                @Html.ValidationMessageFor(model => model.LocationY, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(model => model.ShopID, htmlAttributes: new { @class = "col-sm-2 control-label" })
                            <div class="col-md-8">
                                @Html.TextAreaFor(model => model.ShopID, new { @class = "form-control1", @autofocus = "autofocus", @style = "height:100px;" })

                            </div>
                            <div class="col-md-2">
                                @Html.ValidationMessageFor(model => model.ShopID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(model => model.Information, htmlAttributes: new { @class = "col-sm-2 control-label" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Information, new { @class = "form-control1", @autofocus = "autofocus", @placeholder = "Giá bán" })
                            </div>
                            <div class="col-md-2">
                                @Html.ValidationMessageFor(model => model.Information, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                  <div class="form-group">
                        <div class="col-md-10" style="margin:10px auto;">
                            <button type="submit" class="btn btn-default btn-sm">Update</button>
                            <button type="submit" class="btn btn-default  btn-sm">Cancel</button>
                        </div>
                    </div>



                    <div class="col-md-6">
                        <h2>Bản đồ</h2>
                        <div class="map" id="mapCanvas"></div>
                        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDCt93IfTQUis18bxJ239rL1kVsu_zNgHw&callback=initMap"></script>
                        <script>

                    // This example displays a marker at the center of Australia.
                    // When the user clicks the marker, an info window opens.
                    // 20.986943, 105.525901
                        function initMap() {
                            var uluru = { lat: 21.0466242, lng: 105.7864633 };
                        var infoWindow = new google.maps.InfoWindow();
                         var latlngbounds = new google.maps.LatLngBounds();
                         var map = new google.maps.Map(document.getElementById('mapCanvas'), {
                            zoom: 15,
                            center: uluru
                        });

                         google.maps.event.addListener(map, 'click', function (e) {

                            document.getElementById("txtCordinateX").value = e.latLng.lat();
                            document.getElementById("txtCordinateY").value = e.latLng.lng();
                            placeMarker(e.latLng);

                        });

                         function placeMarker(location) {
                             var marker = new google.maps.Marker({
                                 position: location,
                                 map:map
                             });
                         }


                    }
                    google.maps.event.addDomListener(window, 'load', initMap);
                        </script>
</form>
            }



        </div>
    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>


